{
  "root": true,
  "ignorePatterns": ["**/*"],
  "plugins": ["@nx"],
  "overrides": [
    {
      "files": ["*.ts", "*.tsx", "*.js", "*.jsx"],
      "rules": {
        "@nx/enforce-module-boundaries": [
          "error",
          {
            "enforceBuildableLibDependency": true,
            "allow": [],
            "depConstraints": [
              {
                "sourceTag": "*",
                "onlyDependOnLibsWithTags": ["*"]
              }
            ]
          }
        ]
      }
    },
    {
      "files": [
        "*.ts",
        "*.tsx"
      ],
      "extends": [
        "plugin:react/recommended",
        "plugin:react-hooks/recommended",
        "plugin:@nx/typescript",
        "plugin:@nx/react"
      ],
      "plugins": [
        "jsx-a11y"
      ],
      "settings": {
        "react": {
          "version": "detect"
        }
      },
      "parserOptions": {
        "project": "./tsconfig.base.json"
      },
      "rules": {
        "@typescript-eslint/consistent-type-imports": [
          "error",
          {
            "prefer": "type-imports",
            "fixStyle": "inline-type-imports"
          }
        ],
        "@typescript-eslint/no-unused-vars": [
          "error",
          {
            "argsIgnorePattern": "^_",
            "vars": "all",
            "args": "all",
            "varsIgnorePattern": "^_"
          }
        ],
        "no-unused-vars": "off",
        "no-dupe-else-if": "error",
        "no-dupe-keys": "error",
        "no-duplicate-imports": "error",
        "no-unreachable": "error",
        "no-use-before-define": "error",
        "dot-notation": "error",
        "eqeqeq": "error",
        "no-lonely-if": "error",
        "no-return-await": "error",
        "no-useless-catch": "error",
        "no-var": "error",
        "prefer-const": "error",
        "@typescript-eslint/no-floating-promises": "error",
        "@typescript-eslint/consistent-type-definitions": [
          "warn",
          "type"
        ],
        "consistent-return": "error",
        "@typescript-eslint/explicit-function-return-type": [
          "warn",
          {
            "allowExpressions": true,
            "allowTypedFunctionExpressions": true
          }
        ],
        "object-shorthand": "error",
        "@typescript-eslint/no-explicit-any": "error",
        "@typescript-eslint/return-await": "error",
        "no-unneeded-ternary": "error",
        "@typescript-eslint/no-confusing-void-expression": "error",
        "@typescript-eslint/no-meaningless-void-operator": "warn",
        "react/function-component-definition": [
          "error",
          {
            "namedComponents": [
              "arrow-function"
            ],
            "unnamedComponents": "arrow-function"
          }
        ],
        "no-plusplus": [
          "error",
          {
            "allowForLoopAfterthoughts": true
          }
        ],
        "no-implicit-coercion": "error",
        "jsx-a11y/label-has-associated-control": [
          "error",
          {
            "labelComponents": [
              "Label"
            ],
            "labelAttributes": [
              "label"
            ],
            "controlComponents": [
              "Input",
              "Select"
            ],
            "depth": 2,
            "required": {
              "some": [
                "nesting",
                "id"
              ]
            }
          }
        ],
        "jsx-a11y/anchor-is-valid": [
          "error",
          {
            "components": [
              "Link"
            ],
            "specialLink": [
              "hrefLeft",
              "hrefRight"
            ],
            "aspects": [
              "invalidHref",
              "preferButton"
            ]
          }
        ],
        "@typescript-eslint/prefer-nullish-coalescing": "error",
        "@typescript-eslint/no-unnecessary-condition": "error",
        "@typescript-eslint/no-unsafe-assignment": "error",
        "@typescript-eslint/no-unsafe-member-access": "error",
        "@typescript-eslint/no-unsafe-call": "error",
        "@typescript-eslint/no-unsafe-return": "error",
        "@typescript-eslint/no-unsafe-argument": "error",
        "@typescript-eslint/no-non-null-assertion": "error",
        "@typescript-eslint/prefer-optional-chain": "error",
        "@typescript-eslint/no-unnecessary-type-assertion": "error",
        "no-restricted-syntax": [
          "error",
          {
            "selector": "ExportDefaultDeclaration",
            "message": "Prefer named exports"
          }
        ],
        "@typescript-eslint/require-await": "off",
        "@typescript-eslint/no-misused-promises": [
          "error",
          {
            "checksVoidReturn": {
              "attributes": false
            }
          }
        ],
        "@typescript-eslint/interface-name-prefix": "off",
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/array-type": [
          "error",
          {
            "default": "array-simple"
          }
        ],
        "@typescript-eslint/no-empty-interface": "error",
        "no-shadow": "error",
        "@typescript-eslint/explicit-member-accessibility": [
          "error",
          {
            "accessibility": "explicit",
            "overrides": {
              "accessors": "off",
              "constructors": "no-public",
              "methods": "explicit",
              "properties": "explicit",
              "parameterProperties": "explicit"
            }
          }
        ],
        "@typescript-eslint/consistent-type-exports": [
          "error",
          {
            "fixMixedExportsWithInlineTypeSpecifier": true
          }
        ],
        "@typescript-eslint/consistent-generic-constructors": "error",
        "@typescript-eslint/no-confusing-non-null-assertion": "error",
        "@typescript-eslint/no-duplicate-enum-values": "error",
        "@typescript-eslint/strict-boolean-expressions": [
          "error",
          {
            "allowString": false,
            "allowNumber": false,
            "allowNullableObject": false,
            "allowNullableBoolean": false,
            "allowNullableString": false,
            "allowNullableNumber": false,
            "allowNullableEnum": false,
            "allowAny": false,
            "allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing": false
          }
        ],
        "no-self-compare": "error",
        // React
        "react/prop-types": "off",
        "react/jsx-key": "error",
        "react/jsx-no-target-blank": "error",
        "react/jsx-no-useless-fragment": "warn",
        "react/no-array-index-key": "warn",
        "react/no-deprecated": "warn",
        "react/no-unused-state": "error",
        "react/button-has-type": "error",
        "react/display-name": "error",
        "react/hook-use-state": "error",
        "react/jsx-fragments": [
          "error",
          "element"
        ],
        "react/no-children-prop": "off",
        "react/react-in-jsx-scope": "off",
        "react/jsx-curly-brace-presence": "error",
        "react/jsx-boolean-value": "error",
        "react/no-direct-mutation-state": "error",
        "react/self-closing-comp": "error",
        "react/no-unknown-property": "error"
      }
    },
    {
      "files": ["*.js", "*.jsx"],
      "extends": ["plugin:@nx/javascript"],
      "rules": {}
    }
  ]
}
